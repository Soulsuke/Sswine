var search_data = {"index":{"searchIndex":["ham","sswine","checkentry()","getdesktopentries()","killallhams()","new()","new()","openshell()","openshell()","updateallhams()","writemenuentries()","readme"],"longSearchIndex":["ham","sswine","ham#checkentry()","ham#getdesktopentries()","sswine#killallhams()","ham::new()","sswine::new()","ham#openshell()","sswine#openshell()","sswine#updateallhams()","sswine#writemenuentries()",""],"info":[["Ham","","Ham.html","","<p>Ham class.\n<p>A ham is a chunk of a swine. So, every sub-directory of .sswine is, by\ndefinition a Ham. Edible …\n"],["Sswine","","Sswine.html","","<p>Sswine stands for “Sswine: split wine”, where wine stands for “wine is not\n(an) emulator”. …\n"],["checkEntry","Ham","Ham.html#method-i-checkEntry","( entry, key )","<p>Checks if the given entry is valid, and makes sure the Path and Icon  keys\nwill point to, respectively, …\n"],["getDesktopEntries","Ham","Ham.html#method-i-getDesktopEntries","()","<p>Generates .desktop files for every entry in the config file (of course, \nexcept for Global Values), then …\n"],["killAllHams","Sswine","Sswine.html#method-i-killAllHams","()","<p>Terminates every Ham (alive or not).\n"],["new","Ham","Ham.html#method-c-new","( path, verbose )","<p>Constructor: takes the path of the ham&#39;s folder and the verbosity mode\n(true/false) as parameters. …\n"],["new","Sswine","Sswine.html#method-c-new","( verbose )","<p>Constructor: takes the verbosity (true/false) is needed as .\n"],["openShell","Ham","Ham.html#method-i-openShell","()","<p>Opens a shell for this Ham in its wine_env/drive_c folder, setting the\nright WINEPREFIX variable to avoid …\n"],["openShell","Sswine","Sswine.html#method-i-openShell","()","<p>Prints a list of all the available hams, then makes the user chose one. A\nshell will be opened in such …\n"],["updateAllHams","Sswine","Sswine.html#method-i-updateAllHams","()","<p>Attempts to update every Ham.\n"],["writeMenuEntries","Sswine","Sswine.html#method-i-writeMenuEntries","()","<p>Creates a menu folder for Sswine, and adds to it an entry for each valid\none of each Ham.\n"],["README","","README_md.html","","<p>Sswine\n<p>Sswine, which stands for “Sswine: split wine”.\n<p>General\n"]]}}